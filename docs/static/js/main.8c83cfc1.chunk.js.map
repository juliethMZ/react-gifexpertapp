{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGVC,mBAAS,IAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KAkB9C,OAEI,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAQ,GAAKR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACxEN,EAAe,KAOX,SAEC,uBACGO,KAAO,OACPC,MAAST,EACTU,SApBc,SAACP,GAC1BF,EAAeE,EAAEQ,OAAOF,a,+BCRXG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAUH,GAF7C,+DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAabM,GAba,4CAAH,sDCIRO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OADAc,QAAQC,IAAKN,EAAIC,EAAOV,GAEpB,sBAAKgB,UAAY,0CAAjB,UAEI,qBAAKC,IAAOjB,EAAKkB,IAAOR,IACxB,kCAAKA,SCPJS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEbd,mBAAS,CAC9BqB,KAAM,GACNe,SAAS,IAJyB,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAiCvC,OA1BAC,qBAAW,WAET1B,EAAUC,GACT0B,MAAM,SAAAC,GAEFH,EAAU,CACNjB,KAAMoB,EACNL,SAAS,SAQjB,CAAEtB,IAWEuB,ED/BmBK,CAAe5B,GAAjCa,EAF4B,EAEjCN,KAAae,EAFoB,EAEpBA,QA+BjB,OACI,qCACD,oBAAIJ,UAAY,oCAAhB,SAAqDlB,IAEpDsB,GAAW,mBAAGJ,UAAY,oCAAf,qBAEZ,qBAAKA,UAAY,YAAjB,SAEEL,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEKA,GADEA,EAAIC,aE1CVkB,EAAe,WAAO,IAAD,EAGM3C,mBAAS,CAAC,kBAHhB,mBAGvB4C,EAHuB,KAGX7C,EAHW,KAY9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OAEnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCpBjC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8c83cfc1.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes  from 'prop-types';\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\nconst handleInputChange = (e) => {\r\n setInputValue (e.target.value);\r\n\r\n}\r\n\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n   if (inputValue.trim().length >2 ) {setCategories(cats => [inputValue, ...cats  ]);}\r\n    setInputValue ('');\r\n}\r\n  \r\n      \r\n\r\n    return (\r\n      \r\n        <form onSubmit ={handleSubmit}>\r\n\r\n         <input \r\n            type = \"text\"\r\n            value = {inputValue}\r\n            onChange = { handleInputChange}\r\n       />\r\n\r\n        </form>\r\n           \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n}"," export const getGifs = async (category) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=0ZVK57DTHSlo1EWM4esxR0iOvhpNYb5q`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map (img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n    \r\n } \r\n","import React from 'react'\r\n\r\n\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log (id, title, url);\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn \">\r\n            {/*img.title*/}\r\n            <img src = {url} alt = {title} />\r\n            <p> {title}</p>\r\n         </div>\r\n    )\r\n}\r\n","import React from 'react'   \r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n const {data:images, loading}= useFetchGifs ( category );\r\n \r\n\r\n\r\n /* useEffect (() => {\r\n   getGifs ( category)\r\n   .then (setimages);\r\n }, [category])*/\r\n\r\n    /*const getGifs = async () => {\r\n        \r\n            const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=0ZVK57DTHSlo1EWM4esxR0iOvhpNYb5q`;\r\n            const resp = await fetch(url);\r\n            const {data} = await resp.json();\r\n\r\n            const gifs = data.map (img => {\r\n                return {\r\n                    id: img.id,\r\n                    title: img.title,\r\n                    url: img.images?.downsized_medium.url\r\n                }\r\n            })\r\n            console.log (gifs);\r\n            setimages (gifs);\r\n         }*/\r\n        \r\n    //esta funcion lo unico que hace es  la peticion https, trae las imagenes y\r\n    //las procesa y podria retornarlas     \r\n            \r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n       <h3 className = 'animate__animated animate__fadeIn'>{category}</h3>\r\n\r\n       {loading && <p className = \" animate__animated animate__flash\"    >loading</p>}\r\n      \r\n       <div className = \"card-grid\" >\r\n     {\r\n         images.map (img => (\r\n            <GifGridItem \r\n            key = {img.id}\r\n             {...img} />\r\n         ))\r\n     }\r\n    </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n     const [state, setstate] = useState({\r\n          data: [],\r\n          loading: true\r\n     });\r\n\r\n     useEffect (() => {\r\n\r\n       getGifs ( category )\r\n       .then (imgs => {\r\n\r\n            setstate ({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n\r\n\r\n\r\n           \r\n       })\r\n\r\n     }, [ category ]);\r\n\r\n\r\n     /*setTimeout (() => {\r\n        setstate ({\r\n            data: [1,2,3,4,5],\r\n            loading: false\r\n       });\r\n     }, 3000 );*/\r\n\r\n\r\n     return state; //{data [], loading: true};\r\n}\r\n\r\n","\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['adventur time']);\r\n\r\n    /*const handleAdd = ( ) => {\r\n    //setcategories ([...categories, 'pokemon']); //aqui aparece de ultimo en la lista\r\n    //setcategories (['pokemon', ...categories]);  //aqui aparece de primero en la lista\r\n     */\r\n\r\n    //setCategories ( cats => [...cats, 'inputValue']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                    )\r\n\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from \"./GifExpertApp\";\n\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}